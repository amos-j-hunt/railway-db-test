from . import db

class PrintingsCard(db.Model):
    __bind_key__ = 'all_printings'
    __tablename__ = 'cards'

    id                      = db.Column(db.Integer, primary_key=True)
    artist                  = db.Column(db.Text)
    artistIds               = db.Column(db.Text)
    asciiName               = db.Column(db.Text)
    attractionLights        = db.Column(db.Text)
    availability            = db.Column(db.Text)
    boosterTypes            = db.Column(db.Text)
    borderColor             = db.Column(db.Text)
    cardParts               = db.Column(db.Text)
    colorIdentity           = db.Column(db.Text)
    colorIndicator          = db.Column(db.Text)
    colors                  = db.Column(db.Text)
    defense                 = db.Column(db.Text)
    duelDeck                = db.Column(db.Text)
    edhrecRank              = db.Column(db.Integer)
    edhrecSaltiness         = db.Column(db.Float)
    faceConvertedManaCost   = db.Column(db.Float)
    faceFlavorName          = db.Column(db.Text)
    faceManaValue           = db.Column(db.Float)
    faceName                = db.Column(db.Text)
    finishes                = db.Column(db.Text)
    flavorName              = db.Column(db.Text)
    flavorText              = db.Column(db.Text)
    frameEffects            = db.Column(db.Text)
    frameVersion            = db.Column(db.Text)
    hand                    = db.Column(db.Text)
    hasAlternativeDeckLimit = db.Column(db.Boolean)
    hasContentWarning       = db.Column(db.Boolean)
    hasFoil                 = db.Column(db.Boolean)
    hasNonFoil              = db.Column(db.Boolean)
    isAlternative           = db.Column(db.Boolean)
    isFullArt               = db.Column(db.Boolean)
    isFunny                 = db.Column(db.Boolean)
    isGameChanger           = db.Column(db.Boolean)
    isOnlineOnly            = db.Column(db.Boolean)
    isOversized             = db.Column(db.Boolean)
    isPromo                 = db.Column(db.Boolean)
    isRebalanced            = db.Column(db.Boolean)
    isReprint               = db.Column(db.Boolean)
    isReserved              = db.Column(db.Boolean)
    isStarter               = db.Column(db.Boolean)
    isStorySpotlight        = db.Column(db.Boolean)
    isTextless              = db.Column(db.Boolean)
    isTimeshifted           = db.Column(db.Boolean)
    keywords                = db.Column(db.Text)
    language                = db.Column(db.Text)
    layout                  = db.Column(db.Text)
    leadershipSkills        = db.Column(db.Text)
    life                    = db.Column(db.Text)
    loyalty                 = db.Column(db.Text)
    manaCost                = db.Column(db.Text)
    manaValue               = db.Column(db.Float)
    name                    = db.Column(db.Text)
    number                  = db.Column(db.Text)
    originalPrintings       = db.Column(db.Text)
    originalReleaseDate     = db.Column(db.Text)
    originalText            = db.Column(db.Text)
    originalType            = db.Column(db.Text)
    otherFaceIds            = db.Column(db.Text)
    power                   = db.Column(db.Text)
    printings               = db.Column(db.Text)
    promoTypes              = db.Column(db.Text)
    rarity                  = db.Column(db.Text)
    rebalancedPrintings     = db.Column(db.Text)
    relatedCards            = db.Column(db.Text)
    securityStamp           = db.Column(db.Text)
    setCode                 = db.Column(db.Text)
    side                    = db.Column(db.Text)
    signature               = db.Column(db.Text)
    sourceProducts          = db.Column(db.Text)
    subsets                 = db.Column(db.Text)
    subtypes                = db.Column(db.Text)
    supertypes              = db.Column(db.Text)
    text                    = db.Column(db.Text)
    toughness               = db.Column(db.Text)
    type                    = db.Column(db.Text)
    types                   = db.Column(db.Text)
    uuid                    = db.Column(db.String(36), nullable=False, index=True)
    variations              = db.Column(db.Text)
    watermark               = db.Column(db.Text)

class CollectionEntry(db.Model):
    __tablename__ = 'collection_cards'

    id                      = db.Column(db.Integer, primary_key=True)
    artist                  = db.Column(db.Text)
    artistIds               = db.Column(db.Text)
    asciiName               = db.Column(db.Text)
    attractionLights        = db.Column(db.Text)
    availability            = db.Column(db.Text)
    boosterTypes            = db.Column(db.Text)
    borderColor             = db.Column(db.Text)
    cardParts               = db.Column(db.Text)
    colorIdentity           = db.Column(db.Text)
    colorIndicator          = db.Column(db.Text)
    colors                  = db.Column(db.Text)
    defense                 = db.Column(db.Text)
    duelDeck                = db.Column(db.Text)
    edhrecRank              = db.Column(db.Integer)
    edhrecSaltiness         = db.Column(db.Float)
    faceConvertedManaCost   = db.Column(db.Float)
    faceFlavorName          = db.Column(db.Text)
    faceManaValue           = db.Column(db.Float)
    faceName                = db.Column(db.Text)
    finishes                = db.Column(db.Text)
    flavorName              = db.Column(db.Text)
    flavorText              = db.Column(db.Text)
    frameEffects            = db.Column(db.Text)
    frameVersion            = db.Column(db.Text)
    hand                    = db.Column(db.Text)
    hasAlternativeDeckLimit = db.Column(db.Boolean)
    hasContentWarning       = db.Column(db.Boolean)
    hasFoil                 = db.Column(db.Boolean)
    hasNonFoil              = db.Column(db.Boolean)
    isAlternative           = db.Column(db.Boolean)
    isFullArt               = db.Column(db.Boolean)
    isFunny                 = db.Column(db.Boolean)
    isGameChanger           = db.Column(db.Boolean)
    isOnlineOnly            = db.Column(db.Boolean)
    isOversized             = db.Column(db.Boolean)
    isPromo                 = db.Column(db.Boolean)
    isRebalanced            = db.Column(db.Boolean)
    isReprint               = db.Column(db.Boolean)
    isReserved              = db.Column(db.Boolean)
    isStarter               = db.Column(db.Boolean)
    isStorySpotlight        = db.Column(db.Boolean)
    isTextless              = db.Column(db.Boolean)
    isTimeshifted           = db.Column(db.Boolean)
    keywords                = db.Column(db.Text)
    language                = db.Column(db.Text)
    layout                  = db.Column(db.Text)
    leadershipSkills        = db.Column(db.Text)
    life                    = db.Column(db.Text)
    loyalty                 = db.Column(db.Text)
    manaCost                = db.Column(db.Text)
    manaValue               = db.Column(db.Float)
    name                    = db.Column(db.Text)
    number                  = db.Column(db.Text)
    originalPrintings       = db.Column(db.Text)
    originalReleaseDate     = db.Column(db.Text)
    originalText            = db.Column(db.Text)
    originalType            = db.Column(db.Text)
    otherFaceIds            = db.Column(db.Text)
    power                   = db.Column(db.Text)
    printings               = db.Column(db.Text)
    promoTypes              = db.Column(db.Text)
    quantity                = db.Column(db.Integer, default=1)
    rarity                  = db.Column(db.Text)
    rebalancedPrintings     = db.Column(db.Text)
    relatedCards            = db.Column(db.Text)
    securityStamp           = db.Column(db.Text)
    setCode                 = db.Column(db.Text)
    side                    = db.Column(db.Text)
    signature               = db.Column(db.Text)
    sourceProducts          = db.Column(db.Text)
    subsets                 = db.Column(db.Text)
    subtypes                = db.Column(db.Text)
    supertypes              = db.Column(db.Text)
    text                    = db.Column(db.Text)
    toughness               = db.Column(db.Text)
    type                    = db.Column(db.Text)
    types                   = db.Column(db.Text)
    uuid                    = db.Column(db.String(36), nullable=False, index=True)
    variations              = db.Column(db.Text)
    watermark               = db.Column(db.Text)
